---
name: docker

on:
  push:
    branches:
    - main
    tags:
    - '*'
  pull_request:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  download-test-data:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
    - name: install tox
      run: pip install tox
    - uses: actions/cache@v4
      id: cache
      env:
        cache-name: ds000017
      with:
        path: "/home/runner/work/${{ github.repository }}/giga_connectome/data/test_data"
        key: ${{ env.cache-name }}

    - if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      name: Download fmriprep derivative of ds000017
      id: download
      run: tox -e test_data

  docker-build:
    # build and test docker image
    runs-on: ubuntu-latest
    needs: [download-test-data]
    steps:
      - name: Build the Docker image
        run: |
          user_name="bids"
          docker build . --file Dockerfile --tag ${user_name}/giga_connectome
          mkdir -p "${HOME}/docker"
          docker save "${user_name}/giga_connectome" > "${HOME}/docker/image.tar"

      - name: Restore cached data ds000017
        id: cache
        uses: actions/cache/restore@v4
        with:
          path: /home/runner/work/${{ github.repository }}/giga_connectome/data/test_data
          key: ds000017

      - name: Test the Docker image
        run: |
          docker load -i ${HOME}/docker/image.tar
          docker run --rm --read-only \
            -v /home/runner/work/${{ github.repository }}/giga_connectome/data/test_data:/test_data \
            -v ./outputs:/outputs \
            -v ./outputs/working_dir:/work \
              bids/giga_connectome \
                /test_data/ds000017-fmriprep22.0.1-downsampled-nosurface \
                /outputs \
                participant \
                -w /work \
                --participant_label 1 \
                --reindex-bids

  docker-push:
    runs-on: ubuntu-latest
    needs: [docker-build]
    steps:
      - name:  load image
        run: docker load -i ${HOME}/docker/image.tar

      - name: push to dockerhub
        run: |
              if [[ -n "${DOCKER_TOKEN}" ]]; then

                echo "${DOCKER_TOKEN}" | docker login -u "${DOCKER_USER}" --password-stdin

                # make sure we have a lowercase repo
                user_name="bids"

                repo_name=$(echo giga_connectome | tr '[:upper:]' '[:lower:]')

                : "Pushing unstable versions to DockerHub"

                unstable="${user_name}/${repo_name}:unstable"

                docker tag "${user_name}/${repo_name}" "${unstable}"
                docker push "${unstable}"

                if [[  -n "${CIRCLE_TAG}" ]]; then

                  : "Pushing stable and latest versions to DockerHub"

                  latest="${user_name}/${repo_name}:latest"

                  major_tagged_release="${user_name}/${repo_name}:${CIRCLE_TAG}"
                  docker tag "${major_unstable}" "${major_tagged_release}"
                  docker push "${major_tagged_release}"

                fi

              else
                  : "No DOCKER_TOKEN, skipping push to DockerHub"
                  exit 1
              fi
